{"version":3,"sources":["../../../src/api/characteristics/index.js"],"names":["schema","Characteristics","router","tree","reference_id","type","which","description","post","required","get","delete"],"mappings":";;;;;;;AAMA;;;;;kBAC0BA,M;;;;AAP1B;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;QAEOC,e;;;AAEP,IAAMC,SAAS,qBAAf;mBACmD,cAAOC,I;IAAlDC,Y,gBAAAA,Y;IAAcC,I,gBAAAA,I;IAAMC,K,gBAAAA,K;IAAOC,W,gBAAAA,W;;AAEnC;;;;;;;;;;;;;;;;AAeAL,OAAOM,IAAP,CAAY,GAAZ,EACE,qBAAM,EAAEC,UAAU,IAAZ,EAAN,CADF,oBAGE,yBAAK,EAAEL,0BAAF,EAAgBC,UAAhB,EAAsBC,YAAtB,EAA6BC,wBAA7B,EAAL,CAHF;;AAMA;;;;;;;;AAQAL,OAAOQ,GAAP,CAAW,GAAX,EACE,2BADF;;AAIA;;;;;;;;;;AAUAR,OAAOS,MAAP,CAAc,MAAd,EACE,qBAAM,EAAEF,UAAU,IAAZ,EAAN,CADF;;kBAIeP,M","file":"index.js","sourcesContent":["import { Router } from 'express'\nimport { middleware as query } from 'querymen'\nimport { middleware as body } from 'bodymen'\nimport { token } from '../../services/passport'\nimport { create, index, destroy } from './controller'\nimport { get as fromDisappeared } from '../disappeared/controller'\nimport { schema } from './model'\nexport Characteristics, { schema } from './model'\n\nconst router = new Router()\nconst { reference_id, type, which, description } = schema.tree\n\n/**\n * @api {post} /characteristics Create characteristics\n * @apiName CreateCharacteristics\n * @apiGroup Characteristics\n * @apiPermission user\n * @apiParam {String} access_token user access token.\n * @apiParam reference_id Characteristics's reference_id.\n * @apiParam type Characteristics's type.\n * @apiParam which Characteristics's which.\n * @apiParam description Characteristics's description.\n * @apiSuccess {Object} characteristics Characteristics's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Characteristics not found.\n * @apiError 401 user access only.\n */\nrouter.post('/',\n  token({ required: true }),\n  fromDisappeared,\n  body({ reference_id, type, which, description }),\n  create)\n\n/**\n * @api {get} /characteristics Retrieve characteristics\n * @apiName RetrieveCharacteristics\n * @apiGroup Characteristics\n * @apiUse listParams\n * @apiSuccess {Object[]} characteristics List of characteristics.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get('/',\n  query(),\n  index)\n\n/**\n * @api {delete} /characteristics/:id Delete characteristics\n * @apiName DeleteCharacteristics\n * @apiGroup Characteristics\n * @apiPermission user\n * @apiParam {String} access_token user access token.\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Characteristics not found.\n * @apiError 401 user access only.\n */\nrouter.delete('/:id',\n  token({ required: true }),\n  destroy)\n\nexport default router\n"]}