{"version":3,"sources":["../../../src/api/disappeared/model.test.js"],"names":["user","disappeared","beforeEach","create","email","password","name","birth_date","disappearance_date","mobile_contact","describe","it","view","expect","toBe","id","createdAt","toBeTruthy","updatedAt"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;AAEA,IAAIA,aAAJ;AAAA,IAAUC,oBAAV;;AAEAC,oFAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI,WAAKC,MAAL,CAAY,EAAEC,OAAO,SAAT,EAAoBC,UAAU,QAA9B,EAAZ,CADJ;;AAAA;AACTL,cADS;AAAA;AAAA,iBAEW,cAAYG,MAAZ,CAAmB,EAAEH,UAAF,EAAQM,MAAM,MAAd,EAAsBC,YAAY,MAAlC,EAA0CC,oBAAoB,MAA9D,EAAsEC,gBAAgB,MAAtF,EAAnB,CAFX;;AAAA;AAETR,qBAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAX;;AAKAS,SAAS,MAAT,EAAiB,YAAM;AACrBC,KAAG,qBAAH,EAA0B,YAAM;AAC9B,QAAMC,OAAOX,YAAYW,IAAZ,EAAb;AACAC,kBAAcD,IAAd,uDAAcA,IAAd,GAAoBE,IAApB,CAAyB,QAAzB;AACAD,WAAOD,KAAKG,EAAZ,EAAgBD,IAAhB,CAAqBb,YAAYc,EAAjC;AACAF,iCAAcD,KAAKZ,IAAnB,GAAyBc,IAAzB,CAA8B,QAA9B;AACAD,WAAOD,KAAKZ,IAAL,CAAUe,EAAjB,EAAqBD,IAArB,CAA0Bd,KAAKe,EAA/B;AACAF,WAAOD,KAAKN,IAAZ,EAAkBQ,IAAlB,CAAuBb,YAAYK,IAAnC;AACAO,WAAOD,KAAKL,UAAZ,EAAwBO,IAAxB,CAA6Bb,YAAYM,UAAzC;AACAM,WAAOD,KAAKJ,kBAAZ,EAAgCM,IAAhC,CAAqCb,YAAYO,kBAAjD;AACAK,WAAOD,KAAKH,cAAZ,EAA4BK,IAA5B,CAAiCb,YAAYQ,cAA7C;AACAI,WAAOD,KAAKI,SAAZ,EAAuBC,UAAvB;AACAJ,WAAOD,KAAKM,SAAZ,EAAuBD,UAAvB;AACD,GAZD;;AAcAN,KAAG,mBAAH,EAAwB,YAAM;AAC5B,QAAMC,OAAOX,YAAYW,IAAZ,CAAiB,IAAjB,CAAb;AACAC,kBAAcD,IAAd,uDAAcA,IAAd,GAAoBE,IAApB,CAAyB,QAAzB;AACAD,WAAOD,KAAKG,EAAZ,EAAgBD,IAAhB,CAAqBb,YAAYc,EAAjC;AACAF,iCAAcD,KAAKZ,IAAnB,GAAyBc,IAAzB,CAA8B,QAA9B;AACAD,WAAOD,KAAKZ,IAAL,CAAUe,EAAjB,EAAqBD,IAArB,CAA0Bd,KAAKe,EAA/B;AACAF,WAAOD,KAAKN,IAAZ,EAAkBQ,IAAlB,CAAuBb,YAAYK,IAAnC;AACAO,WAAOD,KAAKL,UAAZ,EAAwBO,IAAxB,CAA6Bb,YAAYM,UAAzC;AACAM,WAAOD,KAAKJ,kBAAZ,EAAgCM,IAAhC,CAAqCb,YAAYO,kBAAjD;AACAK,WAAOD,KAAKH,cAAZ,EAA4BK,IAA5B,CAAiCb,YAAYQ,cAA7C;AACAI,WAAOD,KAAKI,SAAZ,EAAuBC,UAAvB;AACAJ,WAAOD,KAAKM,SAAZ,EAAuBD,UAAvB;AACD,GAZD;AAaD,CA5BD","file":"model.test.js","sourcesContent":["import { Disappeared } from '.'\nimport { User } from '../user'\n\nlet user, disappeared\n\nbeforeEach(async () => {\n  user = await User.create({ email: 'a@a.com', password: '123456' })\n  disappeared = await Disappeared.create({ user, name: 'test', birth_date: 'test', disappearance_date: 'test', mobile_contact: 'test' })\n})\n\ndescribe('view', () => {\n  it('returns simple view', () => {\n    const view = disappeared.view()\n    expect(typeof view).toBe('object')\n    expect(view.id).toBe(disappeared.id)\n    expect(typeof view.user).toBe('object')\n    expect(view.user.id).toBe(user.id)\n    expect(view.name).toBe(disappeared.name)\n    expect(view.birth_date).toBe(disappeared.birth_date)\n    expect(view.disappearance_date).toBe(disappeared.disappearance_date)\n    expect(view.mobile_contact).toBe(disappeared.mobile_contact)\n    expect(view.createdAt).toBeTruthy()\n    expect(view.updatedAt).toBeTruthy()\n  })\n\n  it('returns full view', () => {\n    const view = disappeared.view(true)\n    expect(typeof view).toBe('object')\n    expect(view.id).toBe(disappeared.id)\n    expect(typeof view.user).toBe('object')\n    expect(view.user.id).toBe(user.id)\n    expect(view.name).toBe(disappeared.name)\n    expect(view.birth_date).toBe(disappeared.birth_date)\n    expect(view.disappearance_date).toBe(disappeared.disappearance_date)\n    expect(view.mobile_contact).toBe(disappeared.mobile_contact)\n    expect(view.createdAt).toBeTruthy()\n    expect(view.updatedAt).toBeTruthy()\n  })\n})\n"]}