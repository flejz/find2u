{"version":3,"sources":["../../../src/api/user/controller.js"],"names":["index","res","next","querymen","query","select","cursor","find","then","users","map","user","view","catch","show","params","findById","id","showMe","json","create","body","bodymen","err","name","code","status","valid","param","message","update","result","isAdmin","role","isSelfUpdate","merge","save","updatePassword","set","password","destroy","remove"],"mappings":"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","file":"controller.js","sourcesContent":["import _ from 'lodash'\nimport { success, notFound } from '../../services/response/'\nimport { User } from '.'\n\nexport const index = ({ querymen: { query, select, cursor } }, res, next) =>\n  User.find(query, select, cursor)\n    .then((users) => users.map((user) => user.view()))\n    .then(success(res))\n    .catch(next)\n\nexport const show = ({ params }, res, next) =>\n  User.findById(params.id)\n    .then(notFound(res))\n    .then((user) => user ? user.view() : null)\n    .then(success(res))\n    .catch(next)\n\nexport const showMe = ({ user }, res) =>\n  res.json(user.view(true))\n\nexport const create = ({ bodymen: { body } }, res, next) =>\n  User.create(body)\n    .then((user) => user.view(true))\n    .then(success(res, 201))\n    .catch((err) => {\n      /* istanbul ignore else */\n      if (err.name === 'MongoError' && err.code === 11000) {\n        res.status(409).json({\n          valid: false,\n          param: 'email',\n          message: 'email already registered'\n        })\n      } else {\n        next(err)\n      }\n    })\n\nexport const update = ({ bodymen: { body }, params, user }, res, next) =>\n  User.findById(params.id === 'me' ? user.id : params.id)\n    .then(notFound(res))\n    .then((result) => {\n      if (!result) return null\n      const isAdmin = user.role === 'admin'\n      const isSelfUpdate = user.id === result.id\n      if (!isSelfUpdate && !isAdmin) {\n        res.status(401).json({\n          valid: false,\n          message: 'You can\\'t change other user\\'s data'\n        })\n        return null\n      }\n      return result\n    })\n    .then((user) => user ? _.merge(user, body).save() : null)\n    .then((user) => user ? user.view(true) : null)\n    .then(success(res))\n    .catch(next)\n\nexport const updatePassword = ({ bodymen: { body }, params, user }, res, next) =>\n  User.findById(params.id === 'me' ? user.id : params.id)\n    .then(notFound(res))\n    .then((result) => {\n      if (!result) return null\n      const isSelfUpdate = user.id === result.id\n      if (!isSelfUpdate) {\n        res.status(401).json({\n          valid: false,\n          param: 'password',\n          message: 'You can\\'t change other user\\'s password'\n        })\n        return null\n      }\n      return result\n    })\n    .then((user) => user ? user.set({ password: body.password }).save() : null)\n    .then((user) => user ? user.view(true) : null)\n    .then(success(res))\n    .catch(next)\n\nexport const destroy = ({ params }, res, next) =>\n  User.findById(params.id)\n    .then(notFound(res))\n    .then((user) => user ? user.remove() : null)\n    .then(success(res, 204))\n    .catch(next)\n"]}