{"version":3,"sources":["../src/config.js"],"names":["requireProcessEnv","name","process","env","Error","NODE_ENV","dotenv","require","load","path","join","__dirname","sample","config","all","root","port","PORT","ip","IP","masterKey","jwtSecret","mongo","options","db","safe","test","uri","debug","development","production","undefined","MONGODB_URI","module","exports","merge"],"mappings":";;;;;;AACA;;;;AACA;;;;;;AAEA;AAJA;AAKA,IAAMA,oBAAoB,SAApBA,iBAAoB,CAACC,IAAD,EAAU;AAClC,MAAI,CAACC,QAAQC,GAAR,CAAYF,IAAZ,CAAL,EAAwB;AACtB,UAAM,IAAIG,KAAJ,CAAU,sBAAsBH,IAAtB,GAA6B,uBAAvC,CAAN;AACD;AACD,SAAOC,QAAQC,GAAR,CAAYF,IAAZ,CAAP;AACD,CALD;;AAOA;AACA,IAAIC,QAAQC,GAAR,CAAYE,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAMC,SAASC,QAAQ,aAAR,CAAf;AACAD,SAAOE,IAAP,CAAY;AACVC,UAAM,eAAKC,IAAL,CAAUC,SAAV,EAAqB,SAArB,CADI;AAEVC,YAAQ,eAAKF,IAAL,CAAUC,SAAV,EAAqB,iBAArB;AAFE,GAAZ;AAID;;AAED,IAAME,SAAS;AACbC,OAAK;AACHX,SAAKD,QAAQC,GAAR,CAAYE,QAAZ,IAAwB,aAD1B;AAEHU,UAAM,eAAKL,IAAL,CAAUC,SAAV,EAAqB,IAArB,CAFH;AAGHK,UAAMd,QAAQC,GAAR,CAAYc,IAAZ,IAAoB,IAHvB;AAIHC,QAAIhB,QAAQC,GAAR,CAAYgB,EAAZ,IAAkB,SAJnB;AAKHC,eAAWpB,kBAAkB,YAAlB,CALR;AAMHqB,eAAWrB,kBAAkB,YAAlB,CANR;AAOHsB,WAAO;AACLC,eAAS;AACPC,YAAI;AACFC,gBAAM;AADJ;AADG;AADJ;AAPJ,GADQ;AAgBbC,QAAM;AACJJ,WAAO;AACLK,WAAK,+BADA;AAELJ,eAAS;AACPK,eAAO;AADA;AAFJ;AADH,GAhBO;AAwBbC,eAAa;AACXP,WAAO;AACLK,WAAK,8BADA;AAELJ,eAAS;AACPK,eAAO;AADA;AAFJ;AADI,GAxBA;AAgCbE,cAAY;AACVZ,QAAIhB,QAAQC,GAAR,CAAYgB,EAAZ,IAAkBY,SADZ;AAEVf,UAAMd,QAAQC,GAAR,CAAYc,IAAZ,IAAoB,IAFhB;AAGVK,WAAO;AACLK,WAAKzB,QAAQC,GAAR,CAAY6B,WAAZ,IAA2B;AAD3B;AAHG;AAhCC,CAAf;;AAyCAC,OAAOC,OAAP,GAAiB,iBAAEC,KAAF,CAAQtB,OAAOC,GAAf,EAAoBD,OAAOA,OAAOC,GAAP,CAAWX,GAAlB,CAApB,CAAjB;kBACe8B,OAAOC,O","file":"config.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport path from 'path'\nimport _ from 'lodash'\n\n/* istanbul ignore next */\nconst requireProcessEnv = (name) => {\n  if (!process.env[name]) {\n    throw new Error('You must set the ' + name + ' environment variable')\n  }\n  return process.env[name]\n}\n\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== 'production') {\n  const dotenv = require('dotenv-safe')\n  dotenv.load({\n    path: path.join(__dirname, '../.env'),\n    sample: path.join(__dirname, '../.env.example')\n  })\n}\n\nconst config = {\n  all: {\n    env: process.env.NODE_ENV || 'development',\n    root: path.join(__dirname, '..'),\n    port: process.env.PORT || 3000,\n    ip: process.env.IP || '0.0.0.0',\n    masterKey: requireProcessEnv('MASTER_KEY'),\n    jwtSecret: requireProcessEnv('JWT_SECRET'),\n    mongo: {\n      options: {\n        db: {\n          safe: true\n        }\n      }\n    }\n  },\n  test: {\n    mongo: {\n      uri: 'mongodb://localhost/temp-test',\n      options: {\n        debug: false\n      }\n    }\n  },\n  development: {\n    mongo: {\n      uri: 'mongodb://localhost/temp-dev',\n      options: {\n        debug: true\n      }\n    }\n  },\n  production: {\n    ip: process.env.IP || undefined,\n    port: process.env.PORT || 8080,\n    mongo: {\n      uri: process.env.MONGODB_URI || 'mongodb://admin:Bilac_123@ds141454.mlab.com:41454/find2u'\n    }\n  }\n}\n\nmodule.exports = _.merge(config.all, config[config.all.env])\nexport default module.exports\n"]}