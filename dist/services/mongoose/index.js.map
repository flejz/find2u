{"version":3,"sources":["../../../src/services/mongoose/index.js"],"names":["options","forEach","key","set","Promise","Types","ObjectId","prototype","view","id","toString","connection","on","err","console","error","process","exit"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,oBAAY,cAAMA,OAAlB,EAA2BC,OAA3B,CAAmC,UAACC,GAAD,EAAS;AAC1C,qBAASC,GAAT,CAAaD,GAAb,EAAkB,cAAMF,OAAN,CAAcE,GAAd,CAAlB;AACD,CAFD;;AAIA,mBAASE,OAAT;AACA;AACA,mBAASC,KAAT,CAAeC,QAAf,CAAwBC,SAAxB,CAAkCC,IAAlC,GAAyC,YAAY;AACnD,SAAO,EAAEC,IAAI,KAAKC,QAAL,EAAN,EAAP;AACD,CAFD;;AAIA;AACA,mBAASC,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgC,UAACC,GAAD,EAAS;AACvCC,UAAQC,KAAR,CAAc,+BAA+BF,GAA7C;AACAG,UAAQC,IAAR,CAAa,CAAC,CAAd;AACD,CAHD","file":"index.js","sourcesContent":["import Promise from 'bluebird'\nimport mongoose from 'mongoose'\nimport { mongo } from '../../config'\n\nObject.keys(mongo.options).forEach((key) => {\n  mongoose.set(key, mongo.options[key])\n})\n\nmongoose.Promise = Promise\n/* istanbul ignore next */\nmongoose.Types.ObjectId.prototype.view = function () {\n  return { id: this.toString() }\n}\n\n/* istanbul ignore next */\nmongoose.connection.on('error', (err) => {\n  console.error('MongoDB connection error: ' + err)\n  process.exit(-1)\n})\n\nexport default mongoose\n"]}