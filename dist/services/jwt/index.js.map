{"version":3,"sources":["../../../src/services/jwt/index.js"],"names":["jwtSign","promisify","sign","jwtVerify","verify","id","options","method","signSync","token"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,UAAU,mBAAQC,SAAR,CAAkB,uBAAIC,IAAtB,CAAhB;AACA,IAAMC,YAAY,mBAAQF,SAAR,CAAkB,uBAAIG,MAAtB,CAAlB;;AAEO,IAAMF,sBAAO,SAAPA,IAAO,CAACG,EAAD,EAAKC,OAAL;AAAA,MAAcC,MAAd,uEAAuBP,OAAvB;AAAA,SAClBO,OAAO,EAAEF,MAAF,EAAP,qBAA0BC,OAA1B,CADkB;AAAA,CAAb;;AAGA,IAAME,8BAAW,SAAXA,QAAW,CAACH,EAAD,EAAKC,OAAL;AAAA,SAAiBJ,KAAKG,EAAL,EAASC,OAAT,EAAkB,uBAAIJ,IAAtB,CAAjB;AAAA,CAAjB;;AAEA,IAAME,0BAAS,SAATA,MAAS,CAACK,KAAD;AAAA,SAAWN,UAAUM,KAAV,oBAAX;AAAA,CAAf","file":"index.js","sourcesContent":["import jwt from 'jsonwebtoken'\nimport Promise from 'bluebird'\nimport { jwtSecret } from '../../config'\n\nconst jwtSign = Promise.promisify(jwt.sign)\nconst jwtVerify = Promise.promisify(jwt.verify)\n\nexport const sign = (id, options, method = jwtSign) =>\n  method({ id }, jwtSecret, options)\n\nexport const signSync = (id, options) => sign(id, options, jwt.sign)\n\nexport const verify = (token) => jwtVerify(token, jwtSecret)\n"]}