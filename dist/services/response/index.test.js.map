{"version":3,"sources":["../../../src/services/response/index.test.js"],"names":["response","res","beforeEach","status","jest","fn","json","end","describe","it","expect","success","prop","toBeNull","toBeCalledWith","not","toBeCalled","notFound","toHaveBeenCalledTimes","toEqual","user","entity","id","role","author","equals","authorOrAdmin"],"mappings":"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","file":"index.test.js","sourcesContent":["import * as response from '.'\n\nlet res\n\nbeforeEach(() => {\n  res = {\n    status: jest.fn(() => res),\n    json: jest.fn(() => res),\n    end: jest.fn(() => res)\n  }\n})\n\ndescribe('success', () => {\n  it('responds with passed object and status 200', () => {\n    expect(response.success(res)({ prop: 'value' })).toBeNull()\n    expect(res.status).toBeCalledWith(200)\n    expect(res.json).toBeCalledWith({ prop: 'value' })\n  })\n\n  it('responds with passed object and status 201', () => {\n    expect(response.success(res, 201)({ prop: 'value' })).toBeNull()\n    expect(res.status).toBeCalledWith(201)\n    expect(res.json).toBeCalledWith({ prop: 'value' })\n  })\n\n  it('does not send any response when object has not been passed', () => {\n    expect(response.success(res, 201)()).toBeNull()\n    expect(res.status).not.toBeCalled()\n  })\n})\n\ndescribe('notFound', () => {\n  it('responds with status 404 when object has not been passed', () => {\n    expect(response.notFound(res)()).toBeNull()\n    expect(res.status).toBeCalledWith(404)\n    expect(res.end).toHaveBeenCalledTimes(1)\n  })\n\n  it('returns the passed object and does not send any response', () => {\n    expect(response.notFound(res)({ prop: 'value' })).toEqual({ prop: 'value' })\n    expect(res.status).not.toBeCalled()\n    expect(res.end).not.toBeCalled()\n  })\n})\n\ndescribe('authorOrAdmin', () => {\n  let user, entity\n\n  beforeEach(() => {\n    user = {\n      id: 1,\n      role: 'user'\n    }\n    entity = {\n      author: {\n        id: 1,\n        equals (id) {\n          return id === this.id\n        }\n      }\n    }\n  })\n\n  it('returns the passed entity when author is the same', () => {\n    expect(response.authorOrAdmin(res, user, 'author')(entity)).toEqual(entity)\n  })\n\n  it('returns the passed entity when author is admin', () => {\n    user.role = 'admin'\n    expect(response.authorOrAdmin(res, user, 'user')(entity)).toEqual(entity)\n  })\n\n  it('responds with status 401 when author is not the same or admin', () => {\n    user.id = 2\n    expect(response.authorOrAdmin(res, user, 'author')(entity)).toBeNull()\n    expect(res.status).toBeCalledWith(401)\n    expect(res.end).toHaveBeenCalledTimes(1)\n  })\n\n  it('returns null without sending response when entity has not been passed', () => {\n    expect(response.authorOrAdmin(res, user, 'author')()).toBeNull()\n  })\n})\n"]}